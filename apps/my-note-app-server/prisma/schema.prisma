datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  createdAt   DateTime  @default(now())
  description String?
  dueDate     DateTime?
  id          String    @id @default(cuid())
  isCompleted Boolean?
  title       String?
  updatedAt   DateTime  @updatedAt
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

model Tag {
  color     EnumTagColor?
  createdAt DateTime      @default(now())
  id        String        @id @default(cuid())
  name      String?
  updatedAt DateTime      @updatedAt
}

model Notebook {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  notes       Note[]
  title       String?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Calendar {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model Note {
  content    String?
  createdAt  DateTime  @default(now())
  id         String    @id @default(cuid())
  notebook   Notebook? @relation(fields: [notebookId], references: [id])
  notebookId String?
  title      String?
  updatedAt  DateTime  @updatedAt
}

model User {
  calendars Calendar[]
  createdAt DateTime   @default(now())
  email     String?    @unique
  firstName String?
  id        String     @id @default(cuid())
  lastName  String?
  notebooks Notebook[]
  password  String
  roles     Json
  tasks     Task[]
  updatedAt DateTime   @updatedAt
  username  String     @unique
}

enum EnumTagColor {
  Option1
}
